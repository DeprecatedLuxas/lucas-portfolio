---
import type { HTMLAttributes } from "astro/types";
import { Icon } from "astro-icon/components";
import type { VariantProps } from "class-variance-authority";
import { cva } from "class-variance-authority";
import {
  twMerge,
} from "tailwind-merge";
import { isEmoji } from "../../utils";
import Link from "./Link.astro";

const buttonStyles = cva(["focus:outline-none focus-visible:outline-0 disabled:cursor-not-allowed disabled:opacity-75 flex-shrink-0 font-medium rounded-md"], {
  variants: {
    intent: {
      solid: "shadow-sm text-white dark:text-gray-900 bg-primary-500 hover:bg-primary-600 disabled:bg-primary-500 dark:bg-primary-400 dark:hover:bg-primary-500 dark:disabled:bg-primary-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-500 dark:focus-visible:outline-primary-400",
      outline: "ring-1 ring-inset ring-current text-primary-500 dark:text-primary-400 hover:bg-primary-50 disabled:bg-transparent dark:hover:bg-primary-950 dark:disabled:bg-transparent focus-visible:ring-2 focus-visible:ring-primary-500 dark:focus-visible:ring-primary-400",
      soft: "text-primary-500 dark:text-primary-400 bg-primary-50 hover:bg-primary-100 disabled:bg-primary-50 dark:bg-primary-950 dark:hover:bg-primary-900 dark:disabled:bg-primary-950 focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-primary-500 dark:focus-visible:ring-primary-400",
      ghost: "text-primary-500 dark:text-primary-400 hover:bg-primary-50 disabled:bg-transparent dark:hover:bg-primary-950 dark:disabled:bg-transparent focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-primary-500 dark:focus-visible:ring-primary-400",
      link: "text-primary-500 hover:text-primary-600 disabled:text-primary-500 dark:text-primary-400 dark:hover:text-primary-500 dark:disabled:text-primary-400 underline-offset-4 hover:underline focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-primary-500 dark:focus-visible:ring-primary-400",
    },
    size: {
      "2xs": "text-xs px-2 py-1",
      "xs": "text-xs px-2.5 py-1.5",
      "sm": "text-sm px-2.5 py-1.5",
      "md": "text-sm px-3 py-2",
      "lg": "text-sm px-3.5 py-2.5",
      "xl": "text-base px-3.5 py-2.5",
    },
    truncate: {
      true: "text-left break-all line-clamp-1",
    },
    inline: {
      true: "inline-flex items-center",
      false: "w-full flex justify-center items-center",
    },
  },
  defaultVariants: {
    intent: "solid",
    size: "md",
    truncate: false,
    inline: true,
  },
});

interface Props extends HTMLAttributes<"button">, VariantProps<typeof buttonStyles> {
  icon?: string
  href?: string
  truncate?: boolean
  inline?: boolean
}

const {
  size = "md",
  icon,
  intent = "solid",
  type,
  disabled,
  href,
  class: extraClasses,
  truncate = false,
  inline = true,
} = Astro.props;

---

<Link
  as="button"
  {type}
  {href}
  disabled={Boolean(disabled)}
  class:list={twMerge(buttonStyles({ size, intent, truncate, inline }), extraClasses)}
>
  {icon && (
    <span class="mr-2">
      {isEmoji(icon) ? icon : (
        <Icon name={icon} class="inline-block w-6 h-6" />
      )}
    </span>
  )}
  <slot />

</Link>
