---
import { ViewTransitions } from "astro:transitions";
import Link from "../components/Link.astro";

export interface Props {
  title: string
  description: string
  image?: string
}

const {
  title: _title,
  description,
  image = new URL("https://image.luxass.dev/og/text?width=300&height=300"),
} = Astro.props;

const { pathname } = Astro.url;
const isBlog = pathname.startsWith("/blog") && Astro.props.title !== "404";

const href
  = pathname === "/blog" || pathname === "/blog/"
    ? "/"
    : pathname.startsWith("/blog/")
      ? "/blog"
      : "/";

// create a title that changes based on url domain
const title
  = Astro.url.hostname === "luxass.dev"
    ? _title
    : `${_title} | ${Astro.url.hostname}`;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- global metadata -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />

    <!-- primary meta tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- optional meta tags -->
    <meta name="darkreader-lock" />

    <!-- open graph -->
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="luxass.dev" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />

    <!-- twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={image} />

    <!-- links -->
    <link rel="sitemap" href="/sitemap-index.xml" />

    <link
      rel="preload"
      href="/fonts/inter.woff2"
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
    />

    <!-- vercel analytics -->
    <script defer src="/_vercel/insights/script.js"></script>
    <ViewTransitions />
  </head>
  <body>
    {
      isBlog && (
        <Link href={href} class="flex items-center gap-x-2">
          <div class="i-carbon:arrow-left" /> back
        </Link>
      )
    }
    <main class="prose" transition:animate="slide">
      <slot />
    </main>
    <style is:global>
      html {
        @apply antialiased touch-manipulation scroll-smooth text-base;
        text-rendering: optimizeLegibility;
      }

      body {
        @apply text-neutral-800 bg-neutral-100 dark:(text-neutral-300 bg-neutral-900) py-8 min-h-screen max-w-2xl md:!mx-auto !mx-4 font-sans;
      }

      .prose {
        @apply [&>:not(:last-child)]:mb-6;

        & p {
          @apply line-height-relaxed;
        }

        & h1,
        & h2,
        & h3,
        & h4,
        & h5,
        & h6 {
          @apply text-neutral-800 dark:text-neutral-100 font-semibold my-8;
        }

        & h1 {
          @apply text-2xl;
        }

        & h2 {
          @apply text-xl;
        }

        & h3 {
          @apply text-lg;
        }

        & h4 {
          @apply text-base;
        }

        & h5 {
          @apply text-sm;
        }

        & h6 {
          @apply text-xs;
        }

        & strong {
          @apply font-medium text-neutral-800 dark:text-neutral-100;
        }

        & img {
          @apply mx-auto rounded my-6;
        }
      }
    </style>
  </body>
</html>
