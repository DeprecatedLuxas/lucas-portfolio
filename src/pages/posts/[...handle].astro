---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

// import OpenAI from "openai";
import PageLayout from "../../layouts/PageLayout.astro";
import Notification from "../../components/Notification.astro";

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  // const openAI = new OpenAI({
  //   apiKey: import.meta.env.OPENAI_API_KEY,
  // });

  return await Promise.all(
    posts.map(async (post) => {
      // const recommendations = await openAI.chat.completions.create({
      //   model: "gpt-3.5-turbo",
      //   stream: false,
      //   messages: [
      //     {
      //       role: "user",
      //       content: "What should I read next?",
      //     },
      //     {
      //       role: "user",
      //       content: `This is my current blog post im reading: ${post.data.title}`,
      //     },
      //     {
      //       role: "user",
      //       content: `What should I read next? There is these posts: ${posts.map((post) => post.data.title).join(", ")}`,
      //     },
      //   ],
      // });

      // console.log(recommendations);

      return {
        params: { handle: post.data.handle || post.slug },
        props: { post, recommendations: [] },
      };
    }),
  );
}

// TODO: Look into AI recommended posts at the bottom of the page.

interface Props {
  post: CollectionEntry<"posts">
  recommendations: any[]
}

const {
  post: {
    data: { title, description, date, published },
    render,
  },
  recommendations,
} = Astro.props;

const { Content } = await render();
const formattedDate = date.toISOString();

export const prerender = true;
---

<PageLayout
  title={title}
  description={description}
  image={`https://image.luxass.dev/api/image/post?title=${title}&date=${formattedDate}&description=${description}`}
>
  <div class="prose tracking-wide">
    {
      !published && (
        <Notification type="important">
          This post is a <strong>draft</strong>. It may be incomplete or contain
          inaccuracies.
        </Notification>
      )
    }

    <h1 class="mt-8">{title}</h1>
    <Content />
  </div>

  {recommendations.length > 1 && (
    <section>Not currently implemented</section>
  )}
</PageLayout>
