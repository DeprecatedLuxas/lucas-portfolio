---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import { Icon } from "astro-icon/components";
import PageLayout from "../../layouts/PageLayout.astro";

import Code from "../../components/content/mdx/Code.astro";
import Pre from "../../components/content/mdx/Pre.astro";
import { render } from "astro:content";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => {
    return {
      params: { handle: project.data.handle },
      props: { project },
    };
  });
}

interface Props {
  project: CollectionEntry<"projects">;
}

const { project } = Astro.props;

const {
  data: { npm, githubUrl, name, owner, description, icon },
} = project;

export const prerender = true;

const { Content } = await render(project);
const pkgName = npm?.includes("@") ? npm.slice(npm.indexOf("@")) : (npm || "").split("/").pop();
---

<PageLayout
  title={`${name} - projects - luxass.dev`}
  description={description || "No description provided."}
  image={`https://image.luxass.dev/api/image/project?repo=${owner + "/" + name}&description=${description}`}
>
  <a href="/projects">Go Back to projects</a>
  <article class="tracking-wide prose markdown">
    <div class="flex items-center justify-between mb-0">
      <h1 class="!mb-0">
        {icon && <span>{icon}</span>}
        {name}
      </h1>

      <div class="flex items-center gap-2 not-markdown">
        <a target="_blank" rel="noopener noreferrer" href={githubUrl}>
          <Icon name="mdi:github" class="size-6" />
        </a>
        {
          npm && (
            <a target="_blank" rel="noopener noreferrer" href={`https://www.npmjs.com/package/${pkgName}`}>
              <Icon name="logos:npm-icon" class="size-5" />
            </a>
          )
        }
      </div>
    </div>

    <Content
      components={{
        code: Code,
        pre: Pre,
      }}
    />
  </article>
</PageLayout>
