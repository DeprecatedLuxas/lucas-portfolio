---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import { Icon } from "astro-icon/components";
import PageLayout from "../../layouts/PageLayout.astro";

import Code from "../../components/content/mdx/Code.astro";
import Link from "../../components/ui/Link.astro";
import Pre from "../../components/content/mdx/Pre.astro";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { handle: project.id },
    props: { project: project.data },
  }));
}

interface Props {
  project: CollectionEntry<"projects">["data"];
}

const { project } = Astro.props;
const { npm, githubUrl, name, owner, description, icon } = project;

export const prerender = true;

// const pkgName = npm.name?.includes("@")
//   ? npm.name.slice(npm.name.indexOf("@"))
//   : (npm.name || "").split("/").pop();
---

<PageLayout
  title={`${name} - projects - luxass.dev`}
  description={description || "No description provided."}
  image={`https://image.luxass.dev/api/image/project?repo=${owner + "/" + name}&description=${description}`}
>
  <Link href="/projects">Go Back to projects</Link>
  <article class="tracking-wide prose markdown">
    <div class="flex items-center justify-between mb-0">
      <h1 class="!mb-0">
        {icon && <span>{icon}</span>}
        {name}
      </h1>

      <div class="flex items-center gap-2 not-markdown">
        <Link href={githubUrl}>
          <Icon name="mdi:github" class="size-6" />
        </Link>
        <!-- {
          npm && (
            <Link href={`https://www.npmjs.com/package/${pkgName}`}>
              <Icon name="logos:npm-icon" class="size-5" />
            </Link>
          )
        } -->
      </div>
    </div>

    {project.description && <p>{project.description}</p>}

    <!-- <Content
      components={{
        code: Code,
        a: Link,
        pre: Pre,
      }}
    /> -->
  </article>
</PageLayout>
