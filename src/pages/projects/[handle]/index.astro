---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import PageLayout from "../../../layouts/PageLayout.astro";
import Code from "../../../components/Code.vue";
import Table from "../../../components/Table.vue";
import Tr from "../../../components/Tr.vue";
import Th from "../../../components/Th.vue";
import Td from "../../../components/Td.vue";
import Link from "../../../components/Link.astro";

import GitHubIcon from "~icons/carbon/LogoGithub";
import NPMIcon from "~icons/logos/NpmIcon";
import SearchIcon from "~icons/octicon/search";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { handle: project.data.handle || project.slug },
    props: { project },
  }));
}

interface Props {
  project: CollectionEntry<"projects">
}

const {
  project: {
    render,
    data: { name, owner, description, githubUrl, npm },
  },
} = Astro.props;

const { Content } = await render();

export const prerender = true;

const pkgName = npm?.includes("@") ? npm.slice(npm.indexOf("@")) : (npm || "").split("/").pop();

const searchUrl = `https://github.com/search?type=code&q=path%3A%2Fpackage.json%24%2F+%22%5C%22${pkgName}%5C%22%3A%22`;
---

<PageLayout
  title={name}
  description={description || "No description provided."}
  image={`https://image.luxass.dev/api/image/project?input=${encodeURIComponent(
    JSON.stringify({
      repo: `${owner}/${name}`,
      description,
    }),
  )}`}
>
  <div class="prose pt-8 tracking-wide">
    <div
      class="flex flex-col flex-nowrap gap-3 border border-neutral-300 rounded bg-neutral-300 px-3 py-2 font-normal text-neutral-800 sm:flex-row sm:items-center sm:justify-between dark:(border-neutral-800 bg-neutral-800 text-neutral-400)"
    >
      <Link href={githubUrl} title="GitHub" class="flex flex-nowrap items-center gap-2 transition-transform active:scale-95">
        <GitHubIcon class="text-lg" />
         GitHub
      </Link>
      {
        npm && (
          <>
            <Link href={npm} title="NPM Package" class="flex flex-nowrap items-center gap-2 transition-transform active:scale-95">
              <NPMIcon class="text-lg" />
              NPM
            </Link>
            <Link href={searchUrl} title="Who uses this package" class="flex flex-nowrap items-center gap-2 transition-transform active:scale-95">
              <SearchIcon class="text-lg" />
              Who uses this package?
            </Link>
          </>
        )
      }
    </div>
    <Content
      components={{
        code: Code,
        table: Table,
        tr: Tr,
        th: Th,
        td: Td,
        a: Link,
      }}
    />
  </div>
</PageLayout>
